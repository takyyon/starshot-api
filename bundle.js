const e=Symbol('singleComment'),n=Symbol('multiComment'),t=()=>'',o=(e,n,t)=>e.slice(n,t).replace(/\S/g,' '),i=(e,n)=>{let t=n-1,o=0;for(;'\\'===e[t];)t-=1,o+=1;return Boolean(o%2)};function a(a,{whitespace:r=!0}={}){if('string'!=typeof a)throw new TypeError(`Expected argument \`jsonString\` to be a \`string\`, got \`${typeof a}\``);const s=r?o:t;let c=!1,u=!1,l=0,p='';for(let t=0;t<a.length;t++){const o=a[t],r=a[t+1];if(!u&&'"'===o){i(a,t)||(c=!c)}if(!c)if(u||o+r!=='//'){if(u===e&&o+r==='\r\n'){t++,u=!1,p+=s(a,l,t),l=t;continue}if(u===e&&'\n'===o)u=!1,p+=s(a,l,t),l=t;else{if(!u&&o+r==='/*'){p+=a.slice(l,t),l=t,u=n,t++;continue}if(u===n&&o+r==='*/'){t++,u=!1,p+=s(a,l,t+1),l=t+1;continue}}}else p+=a.slice(l,t),l=t,u=e,t++}return p+(u?s(a.slice(l)):a.slice(l))}var r=Object.freeze({__proto__:null,default:[{id:'nodejs',name:'Node.js',outputLocation:'api',configFiles:['package.json']},{id:'dotnet',name:'.NET',outputLocation:'api',configFiles:['*.csproj','*.fsproj','global.json']},{id:'python',name:'Python',outputLocation:'api',variant:['django'],configFiles:['requirements.txt','pyproject.toml','runtime.txt','setup.py']},{id:'django',name:'Django',outputLocation:'api',configFiles:['manage.py','wsgi.py','app.py']},{id:'static',name:'Static',outputLocation:'./',configFiles:['index.html','Index.html','default.htm','default.html','index.htm']},{id:'docker-file',name:'Dockerfile',outputLocation:'./',configFiles:['Dockerfile','docker-compose.yml','docker-compose-dev.yml','docker-compose.images.yml','docker-stack.yml']},{id:'angular',name:'Angular',variant:['angular-universal','scully','ionic-angular'],package:{dependencies:['@angular/core']},outputLocation:'{angular.json#values(projects)[0].architect.build.options.outputPath}',configFiles:['angular.json']},{id:'angular-universal',name:'Angular Universal',package:{dependencies:['@angular/platform-server']},outputLocation:'{angular.json#values(projects)[0].architect.build.options.outputPath}',configFiles:['angular.json','tsconfig.server.json']},{id:'ionic-angular',name:'Ionic for Angular',package:{dependencies:['@ionic/angular']},outputLocation:'{angular.json#values(projects)[0].architect.build.options.outputPath}',configFiles:['ionic.config.json','angular.json']},{id:'scully',name:'Scully',package:{dependencies:['@scullyio/scully','@scullyio/init']},outputLocation:'{angular.json#values(projects)[0].architect.build.options.outputPath}',configFiles:['angular.json','scully.*.config.ts']},{id:'react',name:'React',variant:['preact','nextjs','gatsby','ionic-react'],package:{dependencies:['react','react-dom']},outputLocation:'build'},{id:'preact',name:'Preact',package:{dependencies:['preact']},outputLocation:'build'},{id:'nextjs',name:'Next.js',package:{dependencies:['next']},outputLocation:'out'},{id:'gatsby',name:'Gatsby',package:{dependencies:['gatsby']},outputLocation:'public',configFiles:['gatsby-config.js']},{id:'ionic-react',name:'Ionic for React',package:{dependencies:['@ionic/react']},outputLocation:'build'},{id:'vue',name:'Vue.js',variant:['nuxtjs','vuepress'],package:{dependencies:['vue']},outputLocation:'dist',configFiles:['vue.config.js']},{id:'nuxtjs',name:'Nuxt.js',package:{dependencies:['nuxt']},outputLocation:'dist',configFiles:['nuxt.config.js']},{id:'vuepress',name:'VuePress',package:{dependencies:['vuepress']},outputLocation:'dist'},{id:'aurelia',name:'Aurelia',package:{dependencies:['aurelia-bootstrapper']},outputLocation:'dist'},{id:'elm',name:'Elm',package:{dependencies:['elm','elm-lang']},outputLocation:'public',configFiles:['elm.json']},{id:'ember',name:'Ember.js',package:{entryKey:'ember',dependencies:['ember-cli']},outputLocation:'dist',configFiles:['ember-cli-build.js','.ember-cli']},{id:'flutter',name:'Flutter',package:{dependencies:['flutter','flutter_test']},outputLocation:'build/web',configFiles:['pubspec.yaml']},{id:'glimmer',name:'Glimmer.js',package:{dependencies:['@glimmer/core']},outputLocation:'dist'},{id:'hugo',name:'Hugo',package:{dependencies:['hugo-cli']},outputLocation:'public',configFiles:['archetypes','config.toml']},{id:'knockoutjs',name:'Knockout.js',package:{dependencies:['knockout']},outputLocation:'dist'},{id:'lit',name:'Lit',package:{dependencies:['lit-element']},outputLocation:'dist',configFiles:['custom-elements.json']},{id:'marko',name:'Marko.js',package:{dependencies:['marko']},outputLocation:'public'},{id:'meteor',name:'Meteor',package:{entryKey:'meteor',dependencies:['meteor-node-stubs']},outputLocation:'bundle'},{id:'mithril',name:'Mithril.js',package:{dependencies:['mithril']},outputLocation:'dist'},{id:'polymer',name:'Polymer',package:{dependencies:['@polymer/polymer']},outputLocation:'build/default',configFiles:['polymer.json']},{id:'riot',name:'RiotJS',package:{dependencies:['riot']},outputLocation:'dist'},{id:'stencil',name:'Stencil.js',package:{dependencies:['@stencil/core']},outputLocation:'www',configFiles:['stencil.config.ts']},{id:'svelte',name:'Svelte',package:{dependencies:['svelte']},outputLocation:'public'},{id:'typescript',name:'TypeScript',package:{dependencies:['typescript']},outputLocation:'{tsconfig.json#compilerOptions.outDir}',configFiles:['tsconfig.json']},{id:'azure-functions',name:'Azure Functions',package:{dependencies:[]},outputLocation:'',configFiles:['host.json']}]});const{search:s}=require('jmespath'),c=require('axios').default;async function u(e){return await async function(e){var n;const[t,o='main']=e.split('#');console.log(t),console.log(o);const i=p(e,o);let[a,r]=await d(i);404===a.status&&'master'===o&&([a,r]=await d(i.replace(`/${o}`,'/main')));if(r&&(r.$$repo={url:t,branch:o},null===(n=r.tree)||void 0===n?void 0:n.length)){const e=r.tree.map((e=>(e.isDirectory=()=>e.url.includes('tree'),e.name=e.path,e.path)));return g(r),e}return[]}(e)}function l(e){if(e.startsWith('http')){const n=f();if(n){const t=n.tree.find((n=>n.url===e));if(t){const{url:e,branch:o}=n.$$repo;return`${e}/blob/${o}/${t.path}`}}}return e}function p(e,n='main'){var t,o;const[i,a='main']=e.split('#');let r=i;if(i.startsWith('https://github.com'))r=i.replace('https://github.com','https://api.github.com/repos')+`/git/trees/${a||n}`;else{const n=f(),i=null===(o=null===(t=null==n?void 0:n.tree)||void 0===t?void 0:t.find((n=>n.path===e)))||void 0===o?void 0:o.url;r=null!=i?i:e}return r}async function d(e,n=!0){if(!1===e.startsWith('https://api.github.com'))throw new Error(`Invalid GitHub URL: ${e||'null'}`);const t=process.env.GITHUB_TOKEN,o={headers:{Accept:'application/vnd.github.v3+json',Authorization:t?`token ${t}`:`Basic ${Buffer.from('takyyon:GITHUB_TOKEN','base64').toString('base64')}`}};n&&(e=`${e}?recursive=${n}`);const i=await c({headers:o.headers,url:e}).then((e=>e)).catch((e=>{if(e.response)return e.response;throw e.message}));return[i,await i.data]}function f(){return process.env.__GITHUB_PROJECT__?JSON.parse(process.env.__GITHUB_PROJECT__):void 0}function g(e){process.env.__GITHUB_PROJECT__=JSON.stringify(e)}const m={readdir:async(e,n)=>[],async readFileSync(e){var n,t,o;if(e.includes('/git/trees/'))return null;const i=f(),a=null===(n=null==i?void 0:i.tree)||void 0===n?void 0:n.find((n=>n.url.endsWith(e)));if(null===(t=null==a?void 0:a.$$blob)||void 0===t?void 0:t.$$content)return null===(o=a.$$blob)||void 0===o?void 0:o.$$content;const[r,s]=await d(e);return(null==s?void 0:s.content)?(s.content=s.content.replace(/\n/g,'\r\n'),s.$$content=Buffer.from(s.content,'base64').toString('binary'),function(e){var n;const t=f();null===(n=null==t?void 0:t.tree)||void 0===n||n.filter((n=>n.url===e.url)).map((n=>(n.$$blob=e,n))),g(t)}(s),s.$$content):null},existsSync(e){var n;const t=f();return null===(n=null==t?void 0:t.tree)||void 0===n?void 0:n.some((n=>n.path.endsWith(e)||n.url.endsWith(e)))}},v={join(...e){var n,t,o;const i=null!==(n=e.pop())&&void 0!==n?n:'',a=f(),r=null===(t=null==a?void 0:a.tree)||void 0===t?void 0:t.find((e=>e.path.endsWith(i)));return null!==(o=null==r?void 0:r.url)&&void 0!==o?o:i},resolve:(...e)=>e.join('/'),basename:e=>e.split('/').pop(),dirname:e=>e.split('/').slice(0,-1).join('/')};async function h(e){return y(e=p(e))?m.readFileSync(e):null}function y(e){try{return m.existsSync(e)}catch(e){return!1}}function j(e){if(null===e)return!1;e=a(e);try{return JSON.parse(e),!0}catch{return!1}}function k(e){return e=a(e),JSON.parse(e)}var b;function w(e,n){let t='webapp';const o={};for(const n of e)o[n.framework.id]=n;return t=function(e,n){console.log(`Url: ${n}`);const t=Object.keys(e).length;if(e[b.static]){if(1===t)return!0;if(2===t&&e[b.azureFunctions])return!0;if(e[b.nodejs]){const n=Object.keys(e).filter((n=>{var t;return!(null===(t=e[n].framework.package)||void 0===t?void 0:t.dependencies)}));return e[b.azureFunctions]?3===t||!(4===t&&n.length>4):!(n.length>2)}}return!1}(o,n)?'staticwebapp':'containerapp',t}async function L(e,n=[],t=!1,o=[]){var i;let a=[];const s=['nodejs','typescript'];if(0===n.length){const e=JSON.parse(JSON.stringify(r));'default'in e&&(n=e.default)}0===o.length&&(o=await u(e));y(p('package.json'))||console.warn('No package.json file found at the root of the project.');for(const r of n){console.log(o);for(const c of o){const u=await $(r,e,c);u&&(a=S(await x(e,r,c),a));const l=await F(r,e,c);l&&(a=S(await x(e,r,c),a));const p=await _(r,e,c);if(p&&(a=S(await x(e,r,c),a)),(u||l||p)&&(null===(i=r.variant)||void 0===i?void 0:i.length)){s.push(r.id);for(const i of r.variant){const s=n.find((e=>e.id===i));if(s){const n=await L(e,[s],t,o);a=S(await x(e,r,c),[...a,...n])}}}}}return 1===a.length?a:a.length>1?t?a:a.filter((e=>!1===s.includes(e.framework.id))):[]}async function $(e,n,t){var o,i;var a;if(!((a=t).endsWith('package.json')&&y(a)))return null;const r=await h(t);if(!1===j(r))return console.warn(`[${e.name}] Could not parse JSON file: ${t}`),null;const s=k(r||'{}'),c=s.dependencies||{},u=s.devDependencies||{},l=[...Object.keys(c),...Object.keys(u)],p=s[null===(o=e.package)||void 0===o?void 0:o.entryKey];if(0===l.length)return'nodejs'===e.id?x(n,e,t):null;if(p)return x(n,e,t);if(l.length){const o=null===(i=e.package)||void 0===i?void 0:i.dependencies.filter((e=>l.includes(e)));if(null==o?void 0:o.length)return x(n,e,t)}return null}async function F(e,n,t){var o,i;const a=function(e,n){if(!e.configFiles)return!1;let t=0;for(const o of e.configFiles)if(o.includes('*')){const e=o.replace(/\-/g,'-').replace(/\//g,'/').replace(/\./g,'.').replace(/\*/g,'(.*)')+'$';new RegExp(e,'ig').test(n)&&t++}else(null==n?void 0:n.endsWith(o))&&t++;return t>0}(e,t);if(!a)return null;if(null===await O(e,n))return null;if(null===(o=e.package)||void 0===o?void 0:o.dependencies)for(const o of null===(i=e.package)||void 0===i?void 0:i.dependencies){const i=await h(t);if(i){if(i.includes(o))return x(n,e,t)}else if(t.includes('tree')&&a)return x(n,e,t)}return a?x(n,e,t):null}async function _(e,n,t){if(!('static'===e.id))return null;for(const o of null==e?void 0:e.configFiles)if(t.endsWith(o))return x(n,e,t);return null}async function O(e,n){if(!e.outputLocation)return'./';if(!1===e.outputLocation.includes('{'))return e.outputLocation;const t=e.outputLocation.indexOf('{'),o=e.outputLocation.indexOf('}'),i=e.outputLocation.substring(t+1,o).trim(),[a,r]=i.split('#'),c=v.join(n,a.trim()),u=await h(c);if(u){if(j(u)){const e=k(u),n=await async function(e,n){return s(e,n)}(e,r.trim())||'./';return n}console.warn(`[${e.name}] Could not parse JSON file: ${c}`)}return'./'}function S(e,n){const t=n.find((n=>n.framework.id===e.framework.id));return t?t.matchedFiles=[...new Set([...t.matchedFiles,...e.matchedFiles])]:n.push(e),n}async function x(e,n,t){const o=l(t),i=function(e){if((e=l(e)).startsWith('http')){const n=f();if(n){const{branch:t,url:o}=n.$$repo;return v.dirname(e.replace(o,'').replace(`/blob/${t}/`,'/'))}return e}return v.dirname(e)}(t),{repo:a,owner:r}=function(e){const[n,t,o,i,a]=e.split('/');return{repo:a,owner:i}}(e);return{repo:a,owner:r,deployment:{appLocation:i,outputLocation:await O(n,e)},matchedFiles:[o],framework:n}}(e=>{e.static='static',e.nodejs='nodejs',e.dotnet='dotnet',e.python='python',e.django='django',e.angular='angular',e.angularUniversal='angular-universal',e.ionicAngular='ionic-angular',e.scully='scully',e.react='react',e.preact='preact',e.vue='vue',e.nuxtjs='nuxtjs',e.vuepress='vuepress',e.aurelia='aurelia',e.elm='elm',e.ember='ember',e.flutter='flutter',e.hugo='hugo',e.knockoutjs='knockoutjs',e.lit='lit',e.marko='marko',e.meteor='meteor',e.mithril='mithril',e.polymer='polymer',e.riot='riot',e.stencil='stencil',e.svelte='svelte',e.typescript='typescript',e.azureFunctions='azure-functions',e.dockerFile='dockerFile'})(b||(b={}));const T=(e,n,t)=>`https://github.com/${e}/${n}${t?`#${t}`:''}`,N=require('express'),E=require('cors'),I=N(),J=process.env.PORT||8080;I.use(E({origin:['*']})),I.get('/',(async(e,n)=>{const t=e.query.repo,o=e.query.org;let i=e.query.branch;const a=e.headers['github-token'];if(process.env.GITHUB_TOKEN='',process.env.__GITHUB_PROJECT__='',o&&'string'==typeof o)if(t&&'string'==typeof t){a&&'string'==typeof a?process.env.GITHUB_TOKEN=a:console.warn('Invalid token header'),'string'!=typeof i&&(i='',console.warn('Invalid branch parameter'));try{await P(n,o,t,i)}catch(e){n.status(500),n.json(JSON.parse(JSON.stringify(e)))}}else n.status(400),n.json({message:'Invalid or missing parameters: Repo'});else n.status(400),n.json({message:'Invalid or missing parameters: Org'})})),I.listen(J,(()=>{console.log(`⚡️[server]: Server is running at https://localhost:${J}`)}));const P=(e,n,t,o)=>((e,n,t)=>L(T(e,n,t),[],!0,[]))(n,t,o).then((i=>{((e,n,t,o)=>{const i=T(n,t,o);return Promise.resolve(w(e,i))})(i,n,t,o).then((n=>{e.status(200),e.json({frameworks:i,recommendation:n})})).catch((n=>{console.log('Error on Recommendation: '+n),e.status(500),e.json(n)})).catch((n=>{console.log('Error on framework: '+n),e.status(500),e.json(n)}))}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyJub2RlX21vZHVsZXMvc3RyaXAtanNvbi1jb21tZW50cy9pbmRleC5qcyIsInNyYy9saWIvdXRpbHMudHMiLCJzcmMvbGliL2RldGVjdG9ycy50cyIsInNyYy9saWIvZnVuY3Rpb25zLnRzIiwic3JjL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHNpbmdsZUNvbW1lbnQgPSBTeW1ib2woJ3NpbmdsZUNvbW1lbnQnKTtcbmNvbnN0IG11bHRpQ29tbWVudCA9IFN5bWJvbCgnbXVsdGlDb21tZW50Jyk7XG5cbmNvbnN0IHN0cmlwV2l0aG91dFdoaXRlc3BhY2UgPSAoKSA9PiAnJztcbmNvbnN0IHN0cmlwV2l0aFdoaXRlc3BhY2UgPSAoc3RyaW5nLCBzdGFydCwgZW5kKSA9PiBzdHJpbmcuc2xpY2Uoc3RhcnQsIGVuZCkucmVwbGFjZSgvXFxTL2csICcgJyk7XG5cbmNvbnN0IGlzRXNjYXBlZCA9IChqc29uU3RyaW5nLCBxdW90ZVBvc2l0aW9uKSA9PiB7XG5cdGxldCBpbmRleCA9IHF1b3RlUG9zaXRpb24gLSAxO1xuXHRsZXQgYmFja3NsYXNoQ291bnQgPSAwO1xuXG5cdHdoaWxlIChqc29uU3RyaW5nW2luZGV4XSA9PT0gJ1xcXFwnKSB7XG5cdFx0aW5kZXggLT0gMTtcblx0XHRiYWNrc2xhc2hDb3VudCArPSAxO1xuXHR9XG5cblx0cmV0dXJuIEJvb2xlYW4oYmFja3NsYXNoQ291bnQgJSAyKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN0cmlwSnNvbkNvbW1lbnRzKGpzb25TdHJpbmcsIHt3aGl0ZXNwYWNlID0gdHJ1ZX0gPSB7fSkge1xuXHRpZiAodHlwZW9mIGpzb25TdHJpbmcgIT09ICdzdHJpbmcnKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcihgRXhwZWN0ZWQgYXJndW1lbnQgXFxganNvblN0cmluZ1xcYCB0byBiZSBhIFxcYHN0cmluZ1xcYCwgZ290IFxcYCR7dHlwZW9mIGpzb25TdHJpbmd9XFxgYCk7XG5cdH1cblxuXHRjb25zdCBzdHJpcCA9IHdoaXRlc3BhY2UgPyBzdHJpcFdpdGhXaGl0ZXNwYWNlIDogc3RyaXBXaXRob3V0V2hpdGVzcGFjZTtcblxuXHRsZXQgaXNJbnNpZGVTdHJpbmcgPSBmYWxzZTtcblx0bGV0IGlzSW5zaWRlQ29tbWVudCA9IGZhbHNlO1xuXHRsZXQgb2Zmc2V0ID0gMDtcblx0bGV0IHJlc3VsdCA9ICcnO1xuXG5cdGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBqc29uU3RyaW5nLmxlbmd0aDsgaW5kZXgrKykge1xuXHRcdGNvbnN0IGN1cnJlbnRDaGFyYWN0ZXIgPSBqc29uU3RyaW5nW2luZGV4XTtcblx0XHRjb25zdCBuZXh0Q2hhcmFjdGVyID0ganNvblN0cmluZ1tpbmRleCArIDFdO1xuXG5cdFx0aWYgKCFpc0luc2lkZUNvbW1lbnQgJiYgY3VycmVudENoYXJhY3RlciA9PT0gJ1wiJykge1xuXHRcdFx0Y29uc3QgZXNjYXBlZCA9IGlzRXNjYXBlZChqc29uU3RyaW5nLCBpbmRleCk7XG5cdFx0XHRpZiAoIWVzY2FwZWQpIHtcblx0XHRcdFx0aXNJbnNpZGVTdHJpbmcgPSAhaXNJbnNpZGVTdHJpbmc7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGlzSW5zaWRlU3RyaW5nKSB7XG5cdFx0XHRjb250aW51ZTtcblx0XHR9XG5cblx0XHRpZiAoIWlzSW5zaWRlQ29tbWVudCAmJiBjdXJyZW50Q2hhcmFjdGVyICsgbmV4dENoYXJhY3RlciA9PT0gJy8vJykge1xuXHRcdFx0cmVzdWx0ICs9IGpzb25TdHJpbmcuc2xpY2Uob2Zmc2V0LCBpbmRleCk7XG5cdFx0XHRvZmZzZXQgPSBpbmRleDtcblx0XHRcdGlzSW5zaWRlQ29tbWVudCA9IHNpbmdsZUNvbW1lbnQ7XG5cdFx0XHRpbmRleCsrO1xuXHRcdH0gZWxzZSBpZiAoaXNJbnNpZGVDb21tZW50ID09PSBzaW5nbGVDb21tZW50ICYmIGN1cnJlbnRDaGFyYWN0ZXIgKyBuZXh0Q2hhcmFjdGVyID09PSAnXFxyXFxuJykge1xuXHRcdFx0aW5kZXgrKztcblx0XHRcdGlzSW5zaWRlQ29tbWVudCA9IGZhbHNlO1xuXHRcdFx0cmVzdWx0ICs9IHN0cmlwKGpzb25TdHJpbmcsIG9mZnNldCwgaW5kZXgpO1xuXHRcdFx0b2Zmc2V0ID0gaW5kZXg7XG5cdFx0XHRjb250aW51ZTtcblx0XHR9IGVsc2UgaWYgKGlzSW5zaWRlQ29tbWVudCA9PT0gc2luZ2xlQ29tbWVudCAmJiBjdXJyZW50Q2hhcmFjdGVyID09PSAnXFxuJykge1xuXHRcdFx0aXNJbnNpZGVDb21tZW50ID0gZmFsc2U7XG5cdFx0XHRyZXN1bHQgKz0gc3RyaXAoanNvblN0cmluZywgb2Zmc2V0LCBpbmRleCk7XG5cdFx0XHRvZmZzZXQgPSBpbmRleDtcblx0XHR9IGVsc2UgaWYgKCFpc0luc2lkZUNvbW1lbnQgJiYgY3VycmVudENoYXJhY3RlciArIG5leHRDaGFyYWN0ZXIgPT09ICcvKicpIHtcblx0XHRcdHJlc3VsdCArPSBqc29uU3RyaW5nLnNsaWNlKG9mZnNldCwgaW5kZXgpO1xuXHRcdFx0b2Zmc2V0ID0gaW5kZXg7XG5cdFx0XHRpc0luc2lkZUNvbW1lbnQgPSBtdWx0aUNvbW1lbnQ7XG5cdFx0XHRpbmRleCsrO1xuXHRcdFx0Y29udGludWU7XG5cdFx0fSBlbHNlIGlmIChpc0luc2lkZUNvbW1lbnQgPT09IG11bHRpQ29tbWVudCAmJiBjdXJyZW50Q2hhcmFjdGVyICsgbmV4dENoYXJhY3RlciA9PT0gJyovJykge1xuXHRcdFx0aW5kZXgrKztcblx0XHRcdGlzSW5zaWRlQ29tbWVudCA9IGZhbHNlO1xuXHRcdFx0cmVzdWx0ICs9IHN0cmlwKGpzb25TdHJpbmcsIG9mZnNldCwgaW5kZXggKyAxKTtcblx0XHRcdG9mZnNldCA9IGluZGV4ICsgMTtcblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiByZXN1bHQgKyAoaXNJbnNpZGVDb21tZW50ID8gc3RyaXAoanNvblN0cmluZy5zbGljZShvZmZzZXQpKSA6IGpzb25TdHJpbmcuc2xpY2Uob2Zmc2V0KSk7XG59XG4iLG51bGwsbnVsbCxudWxsLG51bGxdLCJuYW1lcyI6WyJzaW5nbGVDb21tZW50IiwiU3ltYm9sIiwibXVsdGlDb21tZW50Iiwic3RyaXBXaXRob3V0V2hpdGVzcGFjZSIsInN0cmlwV2l0aFdoaXRlc3BhY2UiLCJzdHJpbmciLCJzdGFydCIsImVuZCIsInNsaWNlIiwicmVwbGFjZSIsImlzRXNjYXBlZCIsImpzb25TdHJpbmciLCJxdW90ZVBvc2l0aW9uIiwiaW5kZXgiLCJiYWNrc2xhc2hDb3VudCIsIkJvb2xlYW4iLCJzdHJpcEpzb25Db21tZW50cyIsIndoaXRlc3BhY2UiLCJUeXBlRXJyb3IiLCJzdHJpcCIsImlzSW5zaWRlU3RyaW5nIiwiaXNJbnNpZGVDb21tZW50Iiwib2Zmc2V0IiwicmVzdWx0IiwibGVuZ3RoIiwiY3VycmVudENoYXJhY3RlciIsIm5leHRDaGFyYWN0ZXIiLCJzZWFyY2giLCJyZXF1aXJlIiwiYXhpb3MiLCJkZWZhdWx0IiwiYXN5bmMiLCJsb2FkUHJvamVjdEZpbGVzIiwicm9vdCIsInByb2plY3RVcmwiLCJ1cmwiLCJicmFuY2giLCJzcGxpdCIsImNvbnNvbGUiLCJsb2ciLCJyZXBvVXJsIiwibm9ybWFsaXplVXJsIiwicmVzcG9uc2UiLCJqc29uIiwiY2FsbEdpdEh1YkFwaSIsInN0YXR1cyIsIiQkcmVwbyIsInRyZWUiLCJfZCIsImZpbGVzIiwibWFwIiwiZW50cnkiLCJpc0RpcmVjdG9yeSIsImluY2x1ZGVzIiwibmFtZSIsInBhdGgiLCJzZXRHaXRodWJEYXRhSW5DYWNoZSIsImZldGNoR2l0SHViUHJvamVjdFRyZWVzIiwiZ2V0VXJsRnJvbUZpbGVwYXRoIiwiZmlsZXBhdGgiLCJzdGFydHNXaXRoIiwicHJvamVjdCIsImdldEdpdGh1YlByb2plY3REYXRhRnJvbUNhY2hlIiwiZmlsZSIsImZpbmQiLCJmIiwiZGVmYXVsdEJyYW5jaCIsIm5vcm1hbGl6ZWRVcmwiLCJibG9iVXJsIiwiX2UiLCJpc1JlY3Vyc2l2ZSIsIkVycm9yIiwidG9rZW4iLCJwcm9jZXNzIiwiZW52IiwiR0lUSFVCX1RPS0VOIiwib3B0aW9ucyIsImhlYWRlcnMiLCJBY2NlcHQiLCJBdXRob3JpemF0aW9uIiwiQnVmZmVyIiwiZnJvbSIsInRvU3RyaW5nIiwidGhlbiIsImF4aW9zUmVzcG9uc2UiLCJjYXRjaCIsImVycm9yIiwibWVzc2FnZSIsImRhdGEiLCJfX0dJVEhVQl9QUk9KRUNUX18iLCJKU09OIiwicGFyc2UiLCJ1bmRlZmluZWQiLCJzdHJpbmdpZnkiLCJmcyIsIl8iLCJfb3B0aW9ucyIsImVuZHNXaXRoIiwiJCRibG9iIiwiJCRjb250ZW50IiwiX2YiLCJjb250ZW50IiwiZmlsdGVyIiwidXBkYXRlR2l0SHViUHJvamVjdEJsb2JFbnRyeUluQ2FjaGUiLCJleGlzdHNTeW5jIiwic29tZSIsImpvaW4iLCJhcmdzIiwiZmlsZVVybCIsInBvcCIsImdpdGh1YkVudHJpZXMiLCJyZXNvbHZlIiwiYmFzZW5hbWUiLCJkaXJuYW1lIiwicmVhZEZpbGUiLCJmaWxlUGF0aCIsImZpbGVFeGlzdHMiLCJyZWFkRmlsZVN5bmMiLCJlcnIiLCJpc1ZhbGlkSnNvbiIsImpzb25Db250ZW50Iiwic2FmZVBhcnNlSnNvbiIsIkZyYW1ld29ya0lkcyIsInJlY29tbWVuZFNlcnZpY2UiLCJmcmFtZXdvcmtzIiwicmVjb21tZW5kYXRpb24iLCJmcmFtZXdvcmtPYmoiLCJtYXRjaCIsImZyYW1ld29yayIsImlkIiwidG90YWxGcmFtZXdvcmtzIiwiT2JqZWN0Iiwia2V5cyIsInN0YXRpYyIsImF6dXJlRnVuY3Rpb25zIiwibm9kZWpzIiwiZnJhbWV3b3Jrc1dpdGhvdXREZXBlbmRlbmNpZXMiLCJrZXkiLCJfYSIsInBhY2thZ2UiLCJkZXBlbmRlbmNpZXMiLCJpc1NXQVNlcnZpY2UiLCJpbnNwZWN0IiwicHJvamVjdFJvb3RVcmwiLCJmcmFtZXdva0RlZmluaXRpb25zIiwibWF0Y2hBbGwiLCJwcm9qZWN0RmlsZXMiLCJmb3VuZEZyYW1ld29ya3MiLCJ0b0lnbm9yZUlmTXVsdGlwbGVGcmFtZXdvcmtzRm91bmQiLCJGUkFNRVdPUktfREVGSU5USUlPTlMiLCJ3YXJuIiwiZnJhbWV3b3JrTWF0Y2hCeVBhY2thZ2VKc29uIiwiaW5zcGVjdEJ5UGFja2FnZUpTT05JZkV4aXN0cyIsImluc2VydE9yVXBkYXRlTWF0Y2hlZEZyYW13b3JrIiwiZ2V0TWF0Y2hlZEZyYW1ld29ya09iamVjdCIsImZyYW1ld29ya01hdGNoQnlDb25maWd1cmF0aW9uRmlsZXMiLCJpbnNwZWN0QnlDb25maWd1cmF0aW9uRmlsZUlmRXhpc3RzIiwiZnJhbWV3b3JrTWF0Y2hCeUluZGV4SHRtbCIsImluc3BlY3RCeUluZGV4SHRtbCIsInZhcmlhbnQiLCJwdXNoIiwidmFyaWFudEZyYW1ld29ya0RlZmluaXRpb24iLCJmd2siLCJmb3VuZFZhcmlhbnRGcmFtcndvcmtzIiwianNvbkNvbnRlbnRSYXciLCJwYWNrYWdlSnNvbiIsImV4dHJhY3RlZERlcGVuZGVuY2llcyIsImV4dHJhY3RlZERldkRlcGVuZGVuY2llcyIsImRldkRlcGVuZGVuY2llcyIsImV4dHJhY3RlZERlcGVuZGVuY2llc0tleXMiLCJleHRyYWN0ZWRFbnRyeUtleSIsImVudHJ5S2V5IiwibWF0Y2hlZERlcGVuZGVuY2llcyIsIl9iIiwidmFsdWUiLCJoYXNDb25maWdGaWxlIiwiZmlsZW5hbWUiLCJjb25maWdGaWxlcyIsIm1hdGNoZWRGaWxlcyIsImNvbmZpZ0ZpbGUiLCJyZWdleCIsIlJlZ0V4cCIsInRlc3QiLCJoYXNDb25maWd1cmF0aW9uRmlsZXMiLCJldmFsdWF0ZU91dHB1dExvY2F0aW9uIiwiZGVwZW5kZW5jaWUiLCJjb25maWd1cmF0aW9uRmlsZUNvbnRlbnQiLCJpbmRleEh0bWxGaWxlIiwib3V0cHV0TG9jYXRpb24iLCJzdGFydE9mRXhwcmVzc2lvbiIsImluZGV4T2YiLCJlbmRPZkV4cHJlc3Npb24iLCJleHByZXNzaW9uIiwic3Vic3RyaW5nIiwidHJpbSIsImpzb25GaWxlVG9QYXJzZSIsImptZXNwYXRoRXhwcmVzc2lvbiIsImpzb25GaWxlVG9QYXJzZVBhdGgiLCJqbWVzcGF0aFNlYXJjaCIsIm1hdGNoZWRGcmFtZXdvcmsiLCJtYXRjaGVkRnJhbWV3b3JrcyIsImV4aXN0aW5nRnJhbWV3b3JrIiwiU2V0IiwiYXBwTG9jYXRpb24iLCJnZXRBcHBsb2NhdGlvblVybCIsInJlcG8iLCJvd25lciIsIl9jIiwiZ2V0UmVwb0luZm9Gcm9tVXJsIiwiZGVwbG95bWVudCIsImdldFByb2plY3RVcmwiLCJvcmciLCJleHByZXNzIiwiY29ycyIsImFwcCIsInBvcnQiLCJQT1JUIiwidXNlIiwib3JpZ2luIiwiZ2V0IiwicmVxIiwicmVzIiwicXVlcnkiLCJydW5BbmRSZXR1cm5BbmFseXNpcyIsImV4IiwibGlzdGVuIiwiZ2V0RnJhbWV3b3JrcyIsIlByb21pc2UiLCJnZXRSZWNvbW1lbmRhdGlvbiIsImV4MSIsImV4MiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsRUFBZ0JDLE9BQU8saUJBQ3ZCQyxFQUFlRCxPQUFPLGdCQUV0QkUsRUFBeUIsSUFBTSxHQUMvQkMsRUFBc0IsQ0FBQ0MsRUFBUUMsRUFBT0MsSUFBUUYsRUFBT0csTUFBTUYsRUFBT0MsR0FBS0UsUUFBUSxNQUFPLEtBRXRGQyxFQUFZLENBQUNDLEVBQVlDLEtBQzlCLElBQUlDLEVBQVFELEVBQWdCLEVBQ3hCRSxFQUFpQixFQUVyQixLQUE2QixPQUF0QkgsRUFBV0UsSUFDakJBLEdBQVMsRUFDVEMsR0FBa0IsRUFHbkIsT0FBT0MsUUFBUUQsRUFBaUIsSUFHbEIsU0FBU0UsRUFBa0JMLEdBQVlNLFdBQUNBLEdBQWEsR0FBUSxJQUMzRSxHQUEwQixpQkFBZk4sRUFDVixNQUFNLElBQUlPLFVBQVUscUVBQXFFUCxPQUcxRixNQUFNUSxFQUFRRixFQUFhYixFQUFzQkQsRUFFakQsSUFBSWlCLEdBQWlCLEVBQ2pCQyxHQUFrQixFQUNsQkMsRUFBUyxFQUNUQyxFQUFTLEdBRWIsSUFBSyxJQUFJVixFQUFRLEVBQUdBLEVBQVFGLEVB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
